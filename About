
# NLP Application with Sentiment, Emotion, and NER Analysis

Welcome to the **NLPApp** project, a robust desktop application designed using Python's Tkinter for GUI, featuring TextBlob and NLTK for advanced natural language processing. The app provides real-time analysis of text, including sentiment analysis, named entity recognition (NER), and basic emotion prediction.

## 🚀 Features

- **Sentiment Analysis:** Determine whether the input text expresses positive, neutral, or negative sentiments.
- **Named Entity Recognition (NER):** Identify entities like names, organizations, locations, etc., within the text.
- **Emotion Analysis:** Get a basic breakdown of emotions such as happiness, sadness, anger, and surprise based on keyword matching.
- **Simple Authentication System:** A basic registration and login system to manage users and personalize the experience.

## 🔍 How It Works

This project uses **TextBlob** for sentiment analysis and **NLTK** (Natural Language Toolkit) to extract named entities. The graphical user interface (GUI) is designed using Tkinter, making the app user-friendly and interactive.

### 💡 Behind the Scenes

- **TextBlob:** Extracts sentiment polarity and subjectivity from user input.
- **NLTK:** Employs POS tagging and chunking for recognizing named entities.
- **Tkinter:** Manages the interface for user interaction with login screens, text input, and analysis output.

## 🛠️ Installation

Clone the repository and install the required dependencies:

```bash
 git clone https://github.com/YourUsername/NLPApp.git
 cd NLPApp
 pip install -r requirements.txt

Run the Application:
 python app.py


📂 File Structure
app.py: The main application code that links the NLP features with the GUI.
mydb.py: Handles user registration and login using a simple JSON file as the database.
db.json: The file where user data is stored.
requirements.txt: Lists the dependencies needed for this project.
🌟 Why This Project?
The goal of this project is to demonstrate my proficiency in combining NLP techniques with GUI development while implementing practical Python skills. It also showcases my ability to create real-world, user-friendly applications that could be expanded further for industry use.

🤝 Contributions & Acknowledgements
Contributions are always welcome! Feel free to create pull requests, suggest new features, or report bugs.
